@using PagedList.Mvc;
@model PagedList.IPagedList<Model.Picture>
@{
    ViewBag.Title = "Picture";
    Layout = null;
}
@*<section class="portfolio" id="portfolio">
        <div class="container section-wrapper">

            <div class="row">
                <div id="Div1">
                    @foreach (var p in Model)
                    {

                        <div class="col-sm-4 col-xs-6">
                            <div class="portfolio-item">
                                <div class="portfolio-img">

                                    <img src="@p.Pic_Pic" alt="port3" height="280" />

                                    <div class="portfolio-img-hover">
                                        <a href="@Url.Action("Details", new {id=p.Pic_ID,@class="b-link-stripe b-animate-go  swipebox"})">     <img src="~/Content/_share/User/assets/images/plus.png" class="plus"></a>
                                    </div>
                                </div>
                                <div class="portfolio-item-details">
                                    <div class="portfolio-item-name">
                                        @p.Picture_Type.Name<br /> <small>  <a href="@Url.Action("UserIndex","User",new {UID=p.UserInfo.UID})"> @p.UserInfo.User_Name  </a></small>
                                    </div>

                                    <div class="port-heart">
                                        <i class="ion-ios-heart-outline"></i>  @p.Pic_Point.Count()
                                    </div>
                                </div>

                            </div>
                        </div>
                    }
                </div>

            </div>
        </div>
        <div class="container">
            <div style="float:right">
                <div class="pagecout">Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount</div>

                @Html.PagedListPager(Model, page => Url.Action("Index", "Picture", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
            </div>
        </div>
    </section>*@
<style>
    #Div1 {
        display: flex;
        flex-wrap: wrap;
    }

        #Div1::after {
            content: '';
            flex-grow: 999999999;
        }

        #Div1 div {
            margin: 2px;
            background-color: violet;
            position: relative;
        }

            #Div1 div i {
                display: block;
            }

            #Div1 div img {
                position: absolute;
                top: 0;
                width: 100%;
                vertical-align: bottom;
            }
</style>
<section class="portfolio" id="portfolio">
    <div id="Div1">
        @foreach (var p in Model)
        {
            {
                var divWidth = p.Pic_Width * 200;
                var divSize = divWidth / p.Pic_Height;
                var divPx = divSize + "px";
                var iSize = (p.Pic_Height / p.Pic_Width) * 100 + "%";
                ViewBag.divSize = divSize;
                ViewBag.divPx = divPx;
                ViewBag.iSize = iSize;
            }
            <div style="width:@ViewBag.divPx;flex-grow:@ViewBag.divSize">
                <i id="size" style="padding-bottom:@ViewBag.iSize"></i>
                <a href="@Url.Action("Details", new { id = p.Pic_ID })">
                    <img src="@p.Pic_Pic" />
                </a>
            </div>         
        }
    </div>
</section>